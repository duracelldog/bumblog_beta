{"ast":null,"code":"var _jsxFileName = \"/Users/beomgeunshin/Desktop/bumblog/src/components/board/BoardWrite.tsx\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './BoardWrite.scss';\nimport { useHistory } from 'react-router-dom';\nimport { searchToJson } from '../../utils';\nimport { BsTypeBold, BsTypeItalic, BsTypeUnderline, BsTypeStrikethrough, BsListUl, BsListOl, BsTextIndentLeft, BsTextIndentRight, BsTextCenter } from 'react-icons/bs';\nimport { VscTextSize } from 'react-icons/vsc';\n\nfunction BoardWrite(urlParams) {\n  const [boardTitle, setBoardTitle] = useState({\n    title: '',\n    subTitle: ''\n  });\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [searchVal, setSearchVal] = useState({\n    _id: null\n  });\n  let history = useHistory();\n  const iframeRef = useRef(null);\n  const optionsRef = useRef(null); // 텍스트 에디터 (옵션) 로직\n\n  const execCmd = (exec, value, event) => {\n    if (iframeRef.current && iframeRef.current.contentDocument) {\n      iframeRef.current.contentDocument.addEventListener('keyup', checkCmdState);\n      iframeRef.current.contentDocument.addEventListener('click', checkCmdState);\n    } //현재 상태를 확인해야 하는 부분\n\n\n    if (event) {\n      event.currentTarget.classList.toggle('on');\n    } // insertHTML, insertImage, styleWithCss\n\n\n    if (iframeRef.current && iframeRef.current.contentDocument) {\n      if (value === '') {\n        iframeRef.current.contentDocument.execCommand(exec);\n      } else {\n        iframeRef.current.contentDocument.execCommand(exec, true, value);\n      }\n    } // 로직이 끝난 후 Textarea로 포커스 하기\n\n\n    if (iframeRef.current && iframeRef.current.contentDocument) {\n      iframeRef.current.contentDocument.body.focus();\n    }\n  }; // 텍스트 에디터 (옵션 실시간 체크) 로직\n\n\n  const checkCmdState = () => {\n    if (iframeRef.current && iframeRef.current.contentDocument) {\n      const document = iframeRef.current.contentDocument;\n\n      if (optionsRef.current) {\n        optionsRef.current.childNodes.forEach(list => {\n          if (list.dataset.cmd) {\n            if (document.queryCommandState(list.dataset.cmd)) {\n              list.classList.add('on');\n            } else {\n              list.classList.remove('on');\n            } // console.log('list', list);\n\n          }\n        });\n      }\n    }\n  };\n\n  const fontSizeRef = useRef(null); // 텍스트 에디터 폰트사이즈 윈도우 토글\n\n  const fontSizeToggle = () => {\n    if (fontSizeRef.current) {\n      fontSizeRef.current.classList.toggle('on');\n    }\n  };\n\n  useEffect(() => {\n    if (iframeRef.current && iframeRef.current.contentDocument) {\n      iframeRef.current.contentDocument.designMode = \"on\";\n      iframeRef.current.contentDocument.body.style.fontFamily = 'NotoSansKR-Regular';\n    }\n\n    const searchVal = urlParams.location.search;\n    const searchData = searchToJson(searchVal);\n    setSearchVal(searchData);\n    console.log('searchData', searchData); // 수정요청으로 들어올 경우\n\n    if (searchData._id) {\n      setIsUpdate(true);\n      axios({\n        method: 'get',\n        url: '/api/board/list',\n        params: searchData\n      }).then(res => {\n        console.log('res', res.data[0]);\n        setBoardTitle({\n          title: res.data[0].title,\n          subTitle: res.data[0].subTitle\n        });\n\n        if (iframeRef.current && iframeRef.current.contentDocument) {\n          iframeRef.current.contentDocument.body.innerHTML = res.data[0].description;\n        }\n      });\n    } else {\n      setIsUpdate(false);\n    }\n\n    return () => {\n      if (iframeRef.current && iframeRef.current.contentDocument) {\n        iframeRef.current.contentDocument.removeEventListener('keyup', checkCmdState);\n        iframeRef.current.contentDocument.removeEventListener('click', checkCmdState);\n      }\n    };\n  }, []);\n\n  const onSubmit = e => {\n    var _iframeRef$current, _iframeRef$current$co, _iframeRef$current2, _iframeRef$current2$c;\n\n    e.preventDefault(); // 데이터 전송\n\n    const boardData = {\n      _id: searchVal._id,\n      title: boardTitle.title,\n      subTitle: boardTitle.subTitle,\n      description: (_iframeRef$current = iframeRef.current) === null || _iframeRef$current === void 0 ? void 0 : (_iframeRef$current$co = _iframeRef$current.contentDocument) === null || _iframeRef$current$co === void 0 ? void 0 : _iframeRef$current$co.body.innerHTML,\n      writer: 'bkshin2'\n    }; // 데이터 전송 확인\n\n    console.log('boardTitle', boardTitle);\n    console.log('boardArticle', (_iframeRef$current2 = iframeRef.current) === null || _iframeRef$current2 === void 0 ? void 0 : (_iframeRef$current2$c = _iframeRef$current2.contentDocument) === null || _iframeRef$current2$c === void 0 ? void 0 : _iframeRef$current2$c.body.innerHTML); // 데이터 비우기\n\n    setBoardTitle({\n      title: '',\n      subTitle: ''\n    });\n\n    if (iframeRef.current && iframeRef.current.contentDocument) {\n      iframeRef.current.contentDocument.body.innerHTML = \"\";\n    }\n\n    if (isUpdate) {\n      // 수정일 경우\n      axios({\n        method: 'put',\n        url: '/api/board/list',\n        data: boardData\n      }).then(res => {\n        console.log('put_res', res.data[0]);\n        history.push('/board/view?_id=' + searchVal._id);\n      });\n    } else {\n      // 신규일 경우\n      axios({\n        method: 'post',\n        url: '/api/board/list',\n        data: boardData\n      }).then(res => {\n        console.log('post_res', res.data[0]);\n        history.push('/board');\n      });\n    }\n  };\n\n  const onChangeTitle = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setBoardTitle({ ...boardTitle,\n      [name]: value\n    });\n  }; // 텍스트 에디터 만들기 시작\n  // 기능 : 볼드, 폰트사이즈 10~30, 이탤릭, 삭선, 밑줄, 번호, 점, 들여쓰기(2개), 링크, 이미지 삽입, 파일 첨부\n\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"bb-board-write__main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"bb-board-write__form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"bb-board-write__title\",\n    placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    type: \"text\",\n    name: \"title\",\n    value: boardTitle === null || boardTitle === void 0 ? void 0 : boardTitle.title,\n    onChange: onChangeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"bb-board-write__title--sub\",\n    placeholder: \"\\uC18C\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n    type: \"text\",\n    name: \"subTitle\",\n    value: boardTitle === null || boardTitle === void 0 ? void 0 : boardTitle.subTitle,\n    onChange: onChangeTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bb-board-write__editor-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"bb-board-write__editor-options\",\n    ref: optionsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    \"data-cmd\": \"bold\",\n    onClick: e => execCmd('bold', '', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsTypeBold, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 85\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    \"data-cmd\": \"italic\",\n    onClick: e => execCmd('italic', '', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsTypeItalic, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 89\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    \"data-cmd\": \"underline\",\n    onClick: e => execCmd('underline', '', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsTypeUnderline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 95\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    \"data-cmd\": \"strikethrough\",\n    onClick: e => execCmd('strikethrough', '', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsTypeStrikethrough, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 103\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    \"data-cmd\": \"justifycenter\",\n    onClick: e => execCmd('justifycenter', '', e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsTextCenter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 103\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('insertunorderedlist', ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsListUl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 81\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('insertorderedlist', ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsListOl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 79\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('indent', ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsTextIndentLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 68\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('outdent', ''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(BsTextIndentRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 69\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: fontSizeToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(VscTextSize, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"bb-board-write__editor-font-box\",\n    ref: fontSizeRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('fontSize', '1'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, \"10px\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('fontSize', '2'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, \"13px\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('fontSize', '3'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, \"16px\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('fontSize', '4'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, \"18px\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('fontSize', '5'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, \"24px\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('fontSize', '6'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, \"32px\"), /*#__PURE__*/React.createElement(\"li\", {\n    onClick: e => execCmd('fontSize', '7'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 33\n    }\n  }, \"48px\")))), /*#__PURE__*/React.createElement(\"iframe\", {\n    className: \"bb-board-wrtie__editor\",\n    name: \"boadeditrot\",\n    ref: iframeRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bb-board-write__buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, \"\\uCDE8\\uC18C\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, \"\\uC644\\uB8CC\"))));\n}\n\nexport default BoardWrite;","map":{"version":3,"sources":["/Users/beomgeunshin/Desktop/bumblog/src/components/board/BoardWrite.tsx"],"names":["React","useRef","useState","useEffect","axios","useHistory","searchToJson","BsTypeBold","BsTypeItalic","BsTypeUnderline","BsTypeStrikethrough","BsListUl","BsListOl","BsTextIndentLeft","BsTextIndentRight","BsTextCenter","VscTextSize","BoardWrite","urlParams","boardTitle","setBoardTitle","title","subTitle","isUpdate","setIsUpdate","searchVal","setSearchVal","_id","history","iframeRef","optionsRef","execCmd","exec","value","event","current","contentDocument","addEventListener","checkCmdState","currentTarget","classList","toggle","execCommand","body","focus","document","childNodes","forEach","list","dataset","cmd","queryCommandState","add","remove","fontSizeRef","fontSizeToggle","designMode","style","fontFamily","location","search","searchData","console","log","method","url","params","then","res","data","innerHTML","description","removeEventListener","onSubmit","e","preventDefault","boardData","writer","push","onChangeTitle","name","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,mBAAP;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,YAAR,QAA2B,aAA3B;AAEA,SACIC,UADJ,EAEIC,YAFJ,EAGIC,eAHJ,EAIIC,mBAJJ,EAKIC,QALJ,EAMIC,QANJ,EAOIC,gBAPJ,EAQIC,iBARJ,EASIC,YATJ,QAWO,gBAXP;AAYA,SAAQC,WAAR,QAA0B,iBAA1B;;AAEA,SAASC,UAAT,CAAoBC,SAApB,EAAmC;AAO/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BlB,QAAQ,CAAY;AACpDmB,IAAAA,KAAK,EAAE,EAD6C;AAEpDC,IAAAA,QAAQ,EAAE;AAF0C,GAAZ,CAA5C;AAIA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACuB,SAAD,EAAYC,YAAZ,IAA4BxB,QAAQ,CAAC;AAACyB,IAAAA,GAAG,EAAE;AAAN,GAAD,CAA1C;AACA,MAAIC,OAAO,GAAGvB,UAAU,EAAxB;AAEA,QAAMwB,SAAS,GAAG5B,MAAM,CAAoB,IAApB,CAAxB;AACA,QAAM6B,UAAU,GAAG7B,MAAM,CAAmB,IAAnB,CAAzB,CAhB+B,CAmB/B;;AACA,QAAM8B,OAAO,GAAG,CAACC,IAAD,EAAeC,KAAf,EAA8BC,KAA9B,KAAoF;AAEhG,QAAGL,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,eAA1C,EAA0D;AACtDP,MAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCC,gBAAlC,CAAmD,OAAnD,EAA4DC,aAA5D;AACAT,MAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCC,gBAAlC,CAAmD,OAAnD,EAA4DC,aAA5D;AACH,KAL+F,CAOhG;;;AACA,QAAGJ,KAAH,EAAS;AACLA,MAAAA,KAAK,CAACK,aAAN,CAAoBC,SAApB,CAA8BC,MAA9B,CAAqC,IAArC;AACH,KAV+F,CAahG;;;AACA,QAAGZ,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,eAA1C,EAA0D;AACtD,UAAGH,KAAK,KAAK,EAAb,EAAgB;AACZJ,QAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCM,WAAlC,CAA8CV,IAA9C;AACH,OAFD,MAEK;AACDH,QAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCM,WAAlC,CAA8CV,IAA9C,EAAoD,IAApD,EAA0DC,KAA1D;AACH;AACJ,KApB+F,CAsBhG;;;AACA,QAAGJ,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,eAA1C,EAA0D;AACtDP,MAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCO,IAAlC,CAAuCC,KAAvC;AACH;AACJ,GA1BD,CApB+B,CAiD/B;;;AACA,QAAMN,aAAa,GAAG,MAAK;AACvB,QAAGT,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,eAA1C,EAA0D;AAEtD,YAAMS,QAAQ,GAAGhB,SAAS,CAACM,OAAV,CAAkBC,eAAnC;;AAEA,UAAGN,UAAU,CAACK,OAAd,EAAsB;AAClBL,QAAAA,UAAU,CAACK,OAAX,CAAmBW,UAAnB,CAA8BC,OAA9B,CAAuCC,IAAD,IAAe;AACjD,cAAGA,IAAI,CAACC,OAAL,CAAaC,GAAhB,EAAoB;AAChB,gBAAGL,QAAQ,CAACM,iBAAT,CAA2BH,IAAI,CAACC,OAAL,CAAaC,GAAxC,CAAH,EAAgD;AAC5CF,cAAAA,IAAI,CAACR,SAAL,CAAeY,GAAf,CAAmB,IAAnB;AACH,aAFD,MAEK;AACDJ,cAAAA,IAAI,CAACR,SAAL,CAAea,MAAf,CAAsB,IAAtB;AACH,aALe,CAMhB;;AACH;AACJ,SATD;AAUH;AACJ;AACJ,GAlBD;;AAoBA,QAAMC,WAAW,GAAGrD,MAAM,CAAmB,IAAnB,CAA1B,CAtE+B,CAwE/B;;AACA,QAAMsD,cAAc,GAAG,MAAK;AACxB,QAAGD,WAAW,CAACnB,OAAf,EAAuB;AACnBmB,MAAAA,WAAW,CAACnB,OAAZ,CAAoBK,SAApB,CAA8BC,MAA9B,CAAqC,IAArC;AACH;AACJ,GAJD;;AAMAtC,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG0B,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,eAA1C,EAA0D;AACtDP,MAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCoB,UAAlC,GAA+C,IAA/C;AACA3B,MAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCO,IAAlC,CAAuCc,KAAvC,CAA6CC,UAA7C,GAA0D,oBAA1D;AACH;;AAED,UAAMjC,SAAS,GAAGP,SAAS,CAACyC,QAAV,CAAmBC,MAArC;AACA,UAAMC,UAAU,GAAGvD,YAAY,CAACmB,SAAD,CAA/B;AACAC,IAAAA,YAAY,CAACmC,UAAD,CAAZ;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B,EAVU,CAYV;;AACA,QAAGA,UAAU,CAAClC,GAAd,EAAkB;AACdH,MAAAA,WAAW,CAAC,IAAD,CAAX;AACApB,MAAAA,KAAK,CAAC;AACF4D,QAAAA,MAAM,EAAE,KADN;AAEFC,QAAAA,GAAG,EAAE,iBAFH;AAGFC,QAAAA,MAAM,EAAEL;AAHN,OAAD,CAAL,CAIGM,IAJH,CAISC,GAAD,IAAQ;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBK,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAnB;AAEAjD,QAAAA,aAAa,CAAC;AACVC,UAAAA,KAAK,EAAE+C,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYhD,KADT;AAEVC,UAAAA,QAAQ,EAAE8C,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAY/C;AAFZ,SAAD,CAAb;;AAIA,YAAGO,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,eAA1C,EAA0D;AACtDP,UAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCO,IAAlC,CAAuC2B,SAAvC,GAAmDF,GAAG,CAACC,IAAJ,CAAS,CAAT,EAAYE,WAA/D;AACH;AACJ,OAdD;AAeH,KAjBD,MAiBK;AACD/C,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH;;AAGD,WAAO,MAAI;AACP,UAAGK,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,eAA1C,EAA0D;AACtDP,QAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCoC,mBAAlC,CAAsD,OAAtD,EAA+DlC,aAA/D;AACAT,QAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCoC,mBAAlC,CAAsD,OAAtD,EAA+DlC,aAA/D;AACH;AACJ,KALD;AAMH,GAzCQ,EAyCN,EAzCM,CAAT;;AA6CA,QAAMmC,QAAQ,GAAIC,CAAD,IAAwC;AAAA;;AACrDA,IAAAA,CAAC,CAACC,cAAF,GADqD,CAGrD;;AACA,UAAMC,SAAS,GAAG;AACdjD,MAAAA,GAAG,EAAEF,SAAS,CAACE,GADD;AAEdN,MAAAA,KAAK,EAAEF,UAAU,CAACE,KAFJ;AAGdC,MAAAA,QAAQ,EAAEH,UAAU,CAACG,QAHP;AAIdiD,MAAAA,WAAW,wBAAE1C,SAAS,CAACM,OAAZ,gFAAE,mBAAmBC,eAArB,0DAAE,sBAAoCO,IAApC,CAAyC2B,SAJxC;AAKdO,MAAAA,MAAM,EAAE;AALM,KAAlB,CAJqD,CAYrD;;AACAf,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B5C,UAA1B;AACA2C,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,yBAA4BlC,SAAS,CAACM,OAAtC,iFAA4B,oBAAmBC,eAA/C,0DAA4B,sBAAoCO,IAApC,CAAyC2B,SAArE,EAdqD,CAiBrD;;AACAlD,IAAAA,aAAa,CAAC;AACVC,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,QAAQ,EAAE;AAFA,KAAD,CAAb;;AAIA,QAAGO,SAAS,CAACM,OAAV,IAAqBN,SAAS,CAACM,OAAV,CAAkBC,eAA1C,EAA0D;AACtDP,MAAAA,SAAS,CAACM,OAAV,CAAkBC,eAAlB,CAAkCO,IAAlC,CAAuC2B,SAAvC,GAAmD,EAAnD;AACH;;AAGD,QAAG/C,QAAH,EAAY;AAAE;AACVnB,MAAAA,KAAK,CAAC;AACF4D,QAAAA,MAAM,EAAE,KADN;AAEFC,QAAAA,GAAG,EAAE,iBAFH;AAGFI,QAAAA,IAAI,EAAEO;AAHJ,OAAD,CAAL,CAIGT,IAJH,CAISC,GAAD,IAAQ;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAvB;AACAzC,QAAAA,OAAO,CAACkD,IAAR,CAAa,qBAAqBrD,SAAS,CAACE,GAA5C;AACH,OAPD;AASH,KAVD,MAUK;AAAE;AACHvB,MAAAA,KAAK,CAAC;AACF4D,QAAAA,MAAM,EAAE,MADN;AAEFC,QAAAA,GAAG,EAAE,iBAFH;AAGFI,QAAAA,IAAI,EAAEO;AAHJ,OAAD,CAAL,CAIGT,IAJH,CAISC,GAAD,IAAQ;AACZN,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBK,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAxB;AACAzC,QAAAA,OAAO,CAACkD,IAAR,CAAa,QAAb;AACH,OAPD;AASH;AAEJ,GAjDD;;AAmDA,QAAMC,aAAa,GAAIL,CAAD,IAA2C;AAC7D,UAAM;AAACM,MAAAA,IAAD;AAAO/C,MAAAA;AAAP,QAAgByC,CAAC,CAACO,MAAxB;AACA7D,IAAAA,aAAa,CAAC,EACV,GAAGD,UADO;AAEV,OAAC6D,IAAD,GAAQ/C;AAFE,KAAD,CAAb;AAIH,GAND,CA/K+B,CAuL/B;AACA;;;AAEA,sBACI;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAuC,IAAA,QAAQ,EAAEwC,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAyC,IAAA,WAAW,EAAC,0DAArD;AAAmE,IAAA,IAAI,EAAC,MAAxE;AAA+E,IAAA,IAAI,EAAC,OAApF;AAA4F,IAAA,KAAK,EAAEtD,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEE,KAA/G;AAAsH,IAAA,QAAQ,EAAE0D,aAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAO,IAAA,SAAS,EAAC,4BAAjB;AAA8C,IAAA,WAAW,EAAC,gEAA1D;AAAyE,IAAA,IAAI,EAAC,MAA9E;AAAqF,IAAA,IAAI,EAAC,UAA1F;AAAqG,IAAA,KAAK,EAAE5D,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEG,QAAxH;AAAkI,IAAA,QAAQ,EAAEyD,aAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,gCAAd;AAA+C,IAAA,GAAG,EAAEjD,UAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,gBAAS,MAAb;AAAoB,IAAA,OAAO,EAAG4C,CAAD,IAAO3C,OAAO,CAAC,MAAD,EAAS,EAAT,EAAa2C,CAAb,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4D,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5D,CADJ,eAEI;AAAI,gBAAS,QAAb;AAAsB,IAAA,OAAO,EAAGA,CAAD,IAAO3C,OAAO,CAAC,QAAD,EAAW,EAAX,EAAe2C,CAAf,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhE,CAFJ,eAGI;AAAI,gBAAS,WAAb;AAAyB,IAAA,OAAO,EAAGA,CAAD,IAAO3C,OAAO,CAAC,WAAD,EAAc,EAAd,EAAkB2C,CAAlB,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtE,CAHJ,eAII;AAAI,gBAAS,eAAb;AAA6B,IAAA,OAAO,EAAGA,CAAD,IAAO3C,OAAO,CAAC,eAAD,EAAkB,EAAlB,EAAsB2C,CAAtB,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8E,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9E,CAJJ,eAKI;AAAI,gBAAS,eAAb;AAA6B,IAAA,OAAO,EAAGA,CAAD,IAAO3C,OAAO,CAAC,eAAD,EAAkB,EAAlB,EAAsB2C,CAAtB,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA8E,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9E,CALJ,eAMI;AAAI,IAAA,OAAO,EAAGA,CAAD,IAAO3C,OAAO,CAAC,qBAAD,EAAwB,EAAxB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxD,CANJ,eAOI;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,mBAAD,EAAsB,EAAtB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAsD,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtD,CAPJ,eAQI;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,QAAD,EAAW,EAAX,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA2C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA3C,CARJ,eASI;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,SAAD,EAAY,EAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4C,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5C,CATJ,eAUI;AAAI,IAAA,OAAO,EAAEwB,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAI,IAAA,SAAS,EAAC,iCAAd;AAAgD,IAAA,GAAG,EAAED,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,OAAO,EAAGoB,CAAD,IAAO3C,OAAO,CAAC,UAAD,EAAa,GAAb,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,UAAD,EAAa,GAAb,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,UAAD,EAAa,GAAb,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,UAAD,EAAa,GAAb,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,UAAD,EAAa,GAAb,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,UAAD,EAAa,GAAb,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAI,IAAA,OAAO,EAAG2C,CAAD,IAAO3C,OAAO,CAAC,UAAD,EAAa,GAAb,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,CAFJ,CAVJ,CADJ,eAwBI;AAAQ,IAAA,SAAS,EAAC,wBAAlB;AAA2C,IAAA,IAAI,EAAC,aAAhD;AAA8D,IAAA,GAAG,EAAEF,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBJ,CALJ,eAmCI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,CAnCJ,CADJ,CADJ;AA4CH;;AAED,eAAeZ,UAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './BoardWrite.scss';\nimport {useHistory} from 'react-router-dom';\nimport {searchToJson} from '../../utils';\n\nimport {\n    BsTypeBold, \n    BsTypeItalic,\n    BsTypeUnderline,\n    BsTypeStrikethrough,\n    BsListUl,\n    BsListOl,\n    BsTextIndentLeft,\n    BsTextIndentRight,\n    BsTextCenter\n\n} from 'react-icons/bs';\nimport {VscTextSize} from 'react-icons/vsc';\n\nfunction BoardWrite(urlParams: any){\n\n    type titleType = {\n        title: string;\n        subTitle: string\n    }\n\n    const [boardTitle, setBoardTitle] = useState<titleType>({\n        title: '',\n        subTitle: ''\n    });\n    const [isUpdate, setIsUpdate] = useState(false);\n    const [searchVal, setSearchVal] = useState({_id: null});\n    let history = useHistory();\n\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n    const optionsRef = useRef<HTMLUListElement>(null);\n\n\n    // 텍스트 에디터 (옵션) 로직\n    const execCmd = (exec: string, value: string, event?:React.MouseEvent<HTMLLIElement, MouseEvent>) =>{\n\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            iframeRef.current.contentDocument.addEventListener('keyup', checkCmdState);\n            iframeRef.current.contentDocument.addEventListener('click', checkCmdState);\n        }\n\n        //현재 상태를 확인해야 하는 부분\n        if(event){\n            event.currentTarget.classList.toggle('on');\n        }\n        \n        \n        // insertHTML, insertImage, styleWithCss\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            if(value === ''){\n                iframeRef.current.contentDocument.execCommand(exec);\n            }else{\n                iframeRef.current.contentDocument.execCommand(exec, true, value);\n            }\n        }\n\n        // 로직이 끝난 후 Textarea로 포커스 하기\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            iframeRef.current.contentDocument.body.focus();\n        }\n    }\n\n\n    // 텍스트 에디터 (옵션 실시간 체크) 로직\n    const checkCmdState = () =>{\n        if(iframeRef.current && iframeRef.current.contentDocument){\n\n            const document = iframeRef.current.contentDocument;\n\n            if(optionsRef.current){\n                optionsRef.current.childNodes.forEach((list: any) => {\n                    if(list.dataset.cmd){\n                        if(document.queryCommandState(list.dataset.cmd)){\n                            list.classList.add('on');\n                        }else{\n                            list.classList.remove('on');\n                        }\n                        // console.log('list', list);\n                    } \n                });\n            }\n        }\n    }\n\n    const fontSizeRef = useRef<HTMLUListElement>(null);\n\n    // 텍스트 에디터 폰트사이즈 윈도우 토글\n    const fontSizeToggle = () =>{\n        if(fontSizeRef.current){\n            fontSizeRef.current.classList.toggle('on');\n        }\n    }\n\n    useEffect(()=>{\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            iframeRef.current.contentDocument.designMode = \"on\"\n            iframeRef.current.contentDocument.body.style.fontFamily = 'NotoSansKR-Regular';\n        }\n\n        const searchVal = urlParams.location.search;\n        const searchData = searchToJson(searchVal);\n        setSearchVal(searchData);\n\n        console.log('searchData', searchData);\n\n        // 수정요청으로 들어올 경우\n        if(searchData._id){\n            setIsUpdate(true);\n            axios({\n                method: 'get',\n                url: '/api/board/list',\n                params: searchData\n            }).then((res) =>{\n                console.log('res', res.data[0]);\n\n                setBoardTitle({\n                    title: res.data[0].title,\n                    subTitle: res.data[0].subTitle\n                });\n                if(iframeRef.current && iframeRef.current.contentDocument){\n                    iframeRef.current.contentDocument.body.innerHTML = res.data[0].description;\n                }\n            });\n        }else{\n            setIsUpdate(false);\n        }\n\n\n        return ()=>{\n            if(iframeRef.current && iframeRef.current.contentDocument){\n                iframeRef.current.contentDocument.removeEventListener('keyup', checkCmdState);\n                iframeRef.current.contentDocument.removeEventListener('click', checkCmdState);\n            }\n        }\n    }, []);\n\n\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\n        e.preventDefault();\n\n        // 데이터 전송\n        const boardData = {\n            _id: searchVal._id,\n            title: boardTitle.title,\n            subTitle: boardTitle.subTitle,\n            description: iframeRef.current?.contentDocument?.body.innerHTML,\n            writer: 'bkshin2'\n        };\n\n        // 데이터 전송 확인\n        console.log('boardTitle', boardTitle);\n        console.log('boardArticle', iframeRef.current?.contentDocument?.body.innerHTML);\n        \n\n        // 데이터 비우기\n        setBoardTitle({\n            title: '',\n            subTitle: ''\n        });\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            iframeRef.current.contentDocument.body.innerHTML = \"\";\n        }\n\n\n        if(isUpdate){ // 수정일 경우\n            axios({\n                method: 'put',\n                url: '/api/board/list',\n                data: boardData\n            }).then((res) =>{\n                console.log('put_res', res.data[0]);\n                history.push('/board/view?_id=' + searchVal._id);\n            });\n            \n        }else{ // 신규일 경우\n            axios({\n                method: 'post',\n                url: '/api/board/list',\n                data: boardData\n            }).then((res) =>{\n                console.log('post_res', res.data[0]);\n                history.push('/board');\n            });\n            \n        }\n        \n    }\n\n    const onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) =>{\n        const {name, value} = e.target;\n        setBoardTitle({\n            ...boardTitle,\n            [name]: value\n        })\n    }\n\n    // 텍스트 에디터 만들기 시작\n    // 기능 : 볼드, 폰트사이즈 10~30, 이탤릭, 삭선, 밑줄, 번호, 점, 들여쓰기(2개), 링크, 이미지 삽입, 파일 첨부\n\n    return (\n        <main className=\"bb-board-write__main\">\n            <form className=\"bb-board-write__form\" onSubmit={onSubmit}>\n                <input className=\"bb-board-write__title\" placeholder=\"제목을 입력해주세요.\" type=\"text\" name=\"title\" value={boardTitle?.title} onChange={onChangeTitle}/>\n                <input className=\"bb-board-write__title--sub\" placeholder=\"소제목을 입력해주세요.\" type=\"text\" name=\"subTitle\" value={boardTitle?.subTitle} onChange={onChangeTitle}/>\n  \n\n                <div className=\"bb-board-write__editor-wrapper\">\n                    <ul className=\"bb-board-write__editor-options\" ref={optionsRef}>\n                        <li data-cmd=\"bold\" onClick={(e) => execCmd('bold', '', e)}><BsTypeBold /></li>\n                        <li data-cmd=\"italic\" onClick={(e) => execCmd('italic', '', e)}><BsTypeItalic /></li>\n                        <li data-cmd=\"underline\" onClick={(e) => execCmd('underline', '', e)}><BsTypeUnderline /></li>\n                        <li data-cmd=\"strikethrough\" onClick={(e) => execCmd('strikethrough', '', e)}><BsTypeStrikethrough /></li>\n                        <li data-cmd=\"justifycenter\" onClick={(e) => execCmd('justifycenter', '', e)}><BsTextCenter /></li>\n                        <li onClick={(e) => execCmd('insertunorderedlist', '')}><BsListUl /></li>\n                        <li onClick={(e) => execCmd('insertorderedlist', '')}><BsListOl /></li>\n                        <li onClick={(e) => execCmd('indent', '')}><BsTextIndentLeft /></li>\n                        <li onClick={(e) => execCmd('outdent', '')}><BsTextIndentRight /></li>\n                        <li onClick={fontSizeToggle}>\n                            <VscTextSize />\n                            <ul className=\"bb-board-write__editor-font-box\" ref={fontSizeRef}>\n                                <li onClick={(e) => execCmd('fontSize', '1')}>10px</li>\n                                <li onClick={(e) => execCmd('fontSize', '2')}>13px</li>\n                                <li onClick={(e) => execCmd('fontSize', '3')}>16px</li>\n                                <li onClick={(e) => execCmd('fontSize', '4')}>18px</li>\n                                <li onClick={(e) => execCmd('fontSize', '5')}>24px</li>\n                                <li onClick={(e) => execCmd('fontSize', '6')}>32px</li>\n                                <li onClick={(e) => execCmd('fontSize', '7')}>48px</li>\n                            </ul>\n                        </li>\n                    </ul>\n                    <iframe className=\"bb-board-wrtie__editor\" name=\"boadeditrot\" ref={iframeRef}></iframe>\n                </div>\n                \n\n\n\n                <div className=\"bb-board-write__buttons\">\n                    <button>취소</button>\n                    <button>완료</button>\n                </div>\n            </form>\n        </main>\n    )\n}\n\nexport default BoardWrite;"]},"metadata":{},"sourceType":"module"}