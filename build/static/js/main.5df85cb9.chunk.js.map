{"version":3,"sources":["components/common/Header.tsx","components/common/Footer.tsx","modules/modal.ts","hooks/useModal.tsx","components/common/Modal.tsx","components/board/BoardList.tsx","components/board/BoardHome.tsx","utils/index.ts","components/board/BoardView.tsx","components/board/BoardWrite.tsx","App.tsx","serviceWorker.ts","modules/index.ts","index.tsx"],"names":["Header","mobileMenuRef","useRef","subMenuRef","toggleMainMenu","event","status","current","classList","remove","add","toggle","openSubMenu","document","body","addEventListener","bodyFunc","closeSubMenu","removeEventListener","e","console","log","srcElement","className","flag","forEach","val","index","baseVal","useMemo","window","onClick","to","contains","ref","Footer","OPEN","CLOSE","initialState","title","desc","confirm","isShow","func","modal","state","action","type","payload","useModal","useSelector","dispatch","useDispatch","onOpenModal","useCallback","data","openModal","onOpenConfirmModal","openConfirmModal","onCloseModal","Modal","modalEl","useState","modalData","setModalData","useEffect","closeWindow","defaultProps","BoardList","_id","subTitle","writer","BoardHome","boardList","setBoardList","axios","method","url","then","res","map","x","key","searchToJson","search","searchArray","substring","split","searchJson","values","BoardView","urlParams","description","listData","setListData","history","useHistory","searchVal","location","searchData","params","dangerouslySetInnerHTML","__html","push","BoardWrite","boardTitle","setBoardTitle","isUpdate","setIsUpdate","setSearchVal","iframeRef","optionsRef","execCmd","exec","value","contentDocument","checkCmdState","currentTarget","execCommand","focus","childNodes","list","dataset","cmd","queryCommandState","fontSizeRef","designMode","style","fontFamily","innerHTML","onChangeTitle","target","name","onSubmit","preventDefault","boardData","placeholder","onChange","data-cmd","App","exact","path","component","Boolean","hostname","match","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5df85cb9.chunk.js","sourcesContent":["import React, {useRef, useMemo} from 'react';\nimport {Link} from 'react-router-dom';\nimport {BiMenu, BiUser} from 'react-icons/bi';\nimport './Header.scss';\n\nfunction Header(){\n\n    const mobileMenuRef = useRef<HTMLUListElement>(null);\n    const subMenuRef = useRef<HTMLDivElement>(null);\n\n\n    // MainMenu 모바일에서 메뉴 펄치기 버튼\n    const toggleMainMenu = (event: any , status: Number = 2) =>{\n        if(mobileMenuRef.current){\n            switch(status){\n                case 0: // close\n                    mobileMenuRef.current.classList.remove('on');\n                    break;\n                case 1: // open\n                    mobileMenuRef.current.classList.add('on');\n                    break;\n                case 2: // toggle\n                    mobileMenuRef.current.classList.toggle('on');\n                    break;\n            }\n        }           \n    }\n    // SubMenu 데스크탑/모바일 마이페이지 아이콘 버튼\n    const toggleSubMenu = () =>{\n        if(subMenuRef.current){\n            const classList = subMenuRef.current.classList\n            // console.log('classList', classList);\n            if(classList.contains('on')){\n                closeSubMenu();\n            }else{\n                openSubMenu();\n            }\n        }\n    }\n\n    const openSubMenu = () =>{\n        // console.log(\"openSubMenu 작동\");\n        if(subMenuRef.current){\n            const classList = subMenuRef.current.classList\n            classList.add('on');\n            document.body.addEventListener('click', bodyFunc);\n        }\n    }\n\n    const closeSubMenu = () =>{\n        // console.log(\"closeSubMenu 작동\");\n        if(subMenuRef.current){\n            const classList = subMenuRef.current.classList\n            classList.remove('on');\n            document.body.removeEventListener('click', bodyFunc);\n        }\n    }\n\n    const bodyFunc = (e: any) =>{\n        console.log('bodyevent 실행', e.srcElement.className);\n        const exClassName = [\n            'bb-header__sub-menu-box-ul',\n            'bb-header__sub-menu-box-li'\n        ];\n        let flag = true;\n\n\n        exClassName.forEach((val, index)=>{\n            if(e.srcElement.className === val || e.srcElement.className.baseVal === 'icon-user'){\n                flag = false;\n            }\n        });\n\n        if(flag){\n            closeSubMenu();\n        }\n    }\n\n    useMemo(()=>{\n        window.addEventListener('resize', ()=>{\n            mobileMenuRef.current?.classList.remove('on');\n            subMenuRef.current?.classList.remove('on');\n        });\n    }, []);\n\n    return (\n        <nav className=\"bb-header__nav\">\n            <div className=\"bb-header__menu--desktop\">\n                <div className=\"bb-header__mobile-menu-btn\" onClick={(e) => toggleMainMenu(e, 2)}><BiMenu className=\"icon-menu\" /></div>\n                <div className=\"bb-header__logo-btn\" onClick={(e) => toggleMainMenu(e, 0)}><Link className=\"text-black \" to=\"/\">Bumblog</Link></div>\n                <div className=\"bb-header__desktop-menu-wrapper\">\n                    <ul className=\"bb-header__desktop-menu\">\n                      <li></li>\n                    </ul>\n                    <div className=\"bb-header__sub-menu\">\n                        <div className=\"bb-header__sub-menu-icon\" onClick={toggleSubMenu}><BiUser className=\"icon-user\" /></div>\n                        <div className=\"bb-header__sub-menu-box\" ref={subMenuRef}>\n                            <div className=\"edge-wrapper\">\n                                <div className=\"edge\"></div>\n                            </div>\n                            <ul className=\"bb-header__sub-menu-box-ul\">\n                                <li className=\"bb-header__sub-menu-box-li\">1번 메뉴</li>\n                                <li className=\"bb-header__sub-menu-box-li\">1번 메뉴</li>\n                                <li className=\"bb-header__sub-menu-box-li\">1번 메뉴</li>\n                                <li className=\"bb-header__sub-menu-box-li\">1번 메뉴</li>\n                                <li className=\"bb-header__sub-menu-box-li\">1번 메뉴</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"bb-header__mobile-menu-wrapper\">\n                <ul className=\"bb-header__mobile-menu\" ref={mobileMenuRef}>\n                    <li onClick={(e) => toggleMainMenu(e, 0)}><Link to=\"/board\">MENU-1</Link></li>\n                    <li>MENU-2</li>\n                    <li>MENU-3</li>\n                    <li>MENU-4</li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Footer.scss';\n\nfunction Footer(){\n    return (\n        <footer className=\"footer\">\n            <div className=\"bg-ft\">\n                <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusantium eos repudiandae, porro voluptas, quidem excepturi quo soluta officia odit, alias quod minima autem deleniti laboriosam labore quaerat cum consectetur? Sequi!</div>\n                <div className=\"bg-ft-row-2\">\n                    <div className=\"bg-ft-copyright\">\n                        <div>Copyright © 2020 Bumlog Inc. All rights reserved</div>\n                        <ul>\n                            <li>menu-1</li>\n                            <li>menu-2</li>\n                            <li>menu-3</li>\n                            <li>menu-4</li>\n                        </ul>\n                    </div>\n                    <div>logo</div>\n                </div>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer;","const OPEN = 'modal/open' as const;\nconst OPEN_CONFIRM = 'modal/open_confirm' as const;\nconst CLOSE = 'modal/close' as const;\n\n\nexport type ModalDataType = {\n    status: boolean;\n    title: string;\n    desc: string;\n    confirm: {\n        isShow: boolean;\n        func?: () => void;\n    };\n}\n\nexport const openModal = (data: ModalDataType) =>({\n    type: OPEN,\n    payload: {\n        title: data.title,\n        desc: data.desc,\n        confirm: {\n            isShow: data.confirm.isShow,\n        }\n    }\n\n});\n\nexport const openConfirmModal = (data: ModalDataType) =>({\n    type: OPEN_CONFIRM,\n    payload: {\n        title: data.title,\n        desc: data.desc,\n        confirm: {\n            isShow: data.confirm.isShow,\n            func: data.confirm.func\n        }\n    }\n});\n\nexport const closeModal = () =>({\n    type: CLOSE\n})\n\ntype ModalAction = \n    | ReturnType<typeof openModal>\n    | ReturnType<typeof openConfirmModal>\n    | ReturnType<typeof closeModal>\n\n// type ModalState = {\n//     status: boolean;\n//     title: string;\n//     desc: string;\n//     confirm: {\n//         isShow: boolean;\n//         func: () => void;\n//     }\n// }\n\nconst initialState: ModalDataType = {\n    status: false,\n    title: '',\n    desc: '',\n    confirm: {\n        isShow: false,\n        func: () => {}\n    }\n}\n\nfunction modal(state: ModalDataType = initialState, action: ModalAction): ModalDataType{\n    switch(action.type){\n        case OPEN:\n            return {\n                status: true, \n                title: action.payload.title,\n                desc: action.payload.desc,\n                confirm: {\n                    isShow: action.payload.confirm.isShow,\n                }\n            }\n        case OPEN_CONFIRM:\n            return {\n                status: true, \n                title: action.payload.title,\n                desc: action.payload.desc,\n                confirm: {\n                    isShow: action.payload.confirm.isShow,\n                    func: action.payload.confirm.func\n                }\n            }\n        case CLOSE:\n            return {\n                ...state,\n                status: false\n            }\n        default:\n            return state;\n    }\n}\n\nexport default modal;","import { useSelector, useDispatch } from 'react-redux';\nimport {RootState} from '../modules';\nimport {openModal, openConfirmModal, closeModal} from '../modules/modal';\nimport { useCallback } from 'react';\n\nfunction useModal(){\n    const state = useSelector((state:RootState) => state.modal);\n    const dispatch = useDispatch();\n\n    const onOpenModal = useCallback((data)=>{\n        dispatch(openModal(data));\n    }, [dispatch]);\n\n    const onOpenConfirmModal = useCallback((data)=>{\n        dispatch(openConfirmModal(data));\n    }, [dispatch]);\n\n    const onCloseModal = useCallback(()=>{\n        dispatch(closeModal());\n    }, [dispatch]);\n\n    return {\n        state,\n        onOpenModal,\n        onOpenConfirmModal,\n        onCloseModal\n    }\n}\n\nexport default useModal;","import React, { useRef, useState, useEffect } from 'react';\nimport './Modal.scss';\nimport useModal from '../../hooks/useModal';\nimport {ModalDataType} from '../../modules/modal';\nimport {BsX} from 'react-icons/bs';\n\nfunction Modal({data} : {data: ModalDataType}){\n\n    const {state, onCloseModal} = useModal();\n    const modalEl = useRef<HTMLDivElement>(null);\n    const [modalData, setModalData] = useState<ModalDataType>(data);\n\n    useEffect(function(){\n        setModalData(state);\n    }, [state]);\n\n    const closeWindow = () =>{\n        onCloseModal();\n    }\n\n    return (\n        <div className={`bb-modal__body ${modalData.status && 'on'}`} ref={modalEl}>\n            <div className=\"bb-modal__dim\" onClick={closeWindow}></div>\n            <div className=\"bb-modal__window\">\n                <div className=\"bb-modal__window-close-btn\" onClick={closeWindow}><BsX className=\"bb-modal__window-corss-icon\" /></div>\n                <div>\n                    <h1 className=\"bb-modal__window-title\">{modalData.title}</h1>\n                    <div className=\"bb-modal__window-desc\">\n                        {modalData.desc}\n                    </div>\n                    <div className={`bb-modal__window-btns ${modalData.confirm.isShow && 'on'}`}>\n                        <button onClick={closeWindow}>아니오</button>\n                        <button onClick={modalData.confirm.func}>예</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nModal.defaultProps = {\n    data: {\n        status: false,\n        title: '',\n        desc: '',\n        confirm: {\n          isShow: false\n        }\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport {boardListType} from './BoardHome';\nimport {Link} from 'react-router-dom';\nimport './BoardList.scss';\n\nfunction BoardList({data}: {data: boardListType}){\n\n    return (\n            <li className=\"bb-board-list__body\">\n                <Link to={`/board/view?_id=${data._id}`}>\n                    <div className=\"bb-board-list__contents-wrapper\">\n                        <div className=\"bb-board-list__article\">\n                            <h2 className=\"main-title\">{data.title}</h2>\n                            <div className=\"sub-title\">{data.subTitle}</div>\n                            {/* <div className=\"desc\" dangerouslySetInnerHTML={{__html: data.description}}></div> */}\n                            <ul className=\"info\">\n                                <li>댓글0</li>\n                                <li>날짜</li>\n                                <li>by {data.writer}</li>\n                            </ul>\n                        </div>\n                        <div>\n                            <figure className=\"bb-board-list__image\" />\n                        </div>\n                    </div>\n                </Link>\n            </li>\n        \n    )\n}\n\nexport default BoardList;","import React, { useEffect, useState } from 'react';\nimport './BoardHome.scss';\nimport BoardList from './BoardList';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\nexport type boardListType = {\n    _id: string;\n    subTitle: string;\n    title: string;\n    description: string;\n    writer: string;\n}\n\n\nfunction BoardHome(){\n\n    const [boardList, setBoardList] = useState<boardListType[]>([]);\n\n    useEffect(()=>{\n        console.log('BoardHome-useEffect 실행');\n        axios({\n            method: 'get',\n            url: '/api/board/list'\n        }).then((res) =>{\n            console.log('data', res.data);\n            setBoardList(res.data);\n        });\n\n    }, []);\n\n\n    return (\n        <main className=\"bb-board-home__main\">\n            <section className=\"bb-board-home__hero-section\">\n                <div>\n                    <h1>My Blog</h1>\n                    <div className=\"bb-board-home__hero-desc\">\n                        생각나는 것을 기록하고 저장하는 공간\n                    </div>\n                </div>\n            </section>\n            <section className=\"bb-board-home__tag-section\">\n                <div>\n                    <ul className=\"bb-board-home__tag-ul\">\n                        <li className=\"on\">모두</li>\n                        <li>프로그래밍</li>\n                        <li>스마트폰</li>\n                        <li>코딩</li>\n                        <li>공부</li>\n                        <li>아이폰</li>\n                    </ul>\n                </div>\n            </section>\n            <section>\n                <div className=\"bb-board-home__btns-wrapper\">\n                    <div>&nbsp;</div>\n                    <div><Link to=\"/board/write\">- 글쓰기 -</Link></div>\n                </div>\n            </section>\n            <section className=\"bb-board-home__list-section\">\n                <ul>\n                    {boardList.map(x => <BoardList key={x._id} data={x} />)}\n                </ul>\n            </section>\n            \n        </main>\n    )\n}\n\nexport default BoardHome;","export const searchToJson = (search: string) =>{\n    let searchArray = search.substring(1).split('&');\n    let searchJson: any = {};\n    searchArray.forEach(function(val){\n        const values = val.split('=')\n        searchJson[values[0]] = values[1];\n    });\n\n    return searchJson;\n}","import React, { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport './BoardView.scss';\nimport axios from 'axios';\nimport {searchToJson} from '../../utils';\nimport {boardListType} from './BoardHome';\nimport {useHistory} from 'react-router-dom';\n\nimport useModal from '../../hooks/useModal';\n\nfunction BoardView(urlParams: any){\n\n    const {onOpenConfirmModal, onCloseModal} = useModal();\n\n    const [listData, setListData] = useState<boardListType>({\n        _id: '',\n        subTitle: '',\n        title: '',\n        description: '',\n        writer: ''\n    });\n    let history = useHistory();\n    \n    useEffect(()=>{\n        console.log('useEffect');\n        const searchVal = urlParams.location.search;\n        const searchData = searchToJson(searchVal);\n\n        console.log('searchData', searchData);\n       \n        axios({\n            method: 'get',\n            url: '/api/board/list',\n            params: searchData\n        }).then((res) =>{\n            console.log('res', res.data[0]);\n            if(res.data[0]){\n                setListData(res.data[0]);\n            }\n        });\n    }, []);\n\n\n    const handleDelete = () =>{\n\n        onOpenConfirmModal({\n            status: true,\n            title: '정말 삭제하시겠습니까?',\n            desc: '삭제한 데이터는 복원할 수 없습니다.',\n            confirm: {\n                isShow: true,\n                func: () => {\n                    axios({\n                        method: 'delete',\n                        url: '/api/board/list',\n                        data: listData\n                    }).then((res) =>{\n                        console.log('deleteRes', res.data[0]);\n                        onCloseModal();\n                        history.push('/board');\n                    });\n                }\n            }\n        });\n\n        \n        \n    }\n\n\n    return (\n        <main className=\"main\">\n            <section className=\"bb-board-view__hero-section\">\n                <div className=\"bb-board-view__hero-section-title-wrapper\">\n                    <h1>{listData?.title}</h1>\n                    <div className=\"bb-board-view__subtitle\">\n                        {listData?.subTitle}\n                    </div>\n                </div>\n            </section>\n            <section className=\"bb-board-view__article-section\">\n                <article className=\"bb-board-view__article tui-editor-contents\" dangerouslySetInnerHTML={{__html: listData.description}}></article>\n                <ul className=\"bb-board-view__update-btns\">\n                    <li>\n                        <button>\n                            <Link to={`/board/write?_id=${listData._id === null ? '' : listData._id}`}>수정</Link>\n                        </button>\n                    </li>\n                    <li><button onClick={handleDelete}>삭제</button></li>\n                </ul>\n            </section>\n        </main>\n    );\n}\n\nexport default BoardView;","import React, { useRef, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport './BoardWrite.scss';\nimport {useHistory} from 'react-router-dom';\nimport {searchToJson} from '../../utils';\n\nimport {\n    BsTypeBold, \n    BsTypeItalic,\n    BsTypeUnderline,\n    BsTypeStrikethrough,\n    BsListUl,\n    BsListOl,\n    BsTextIndentLeft,\n    BsTextIndentRight,\n    BsTextCenter\n\n} from 'react-icons/bs';\nimport {VscTextSize} from 'react-icons/vsc';\n\nfunction BoardWrite(urlParams: any){\n\n    type titleType = {\n        title: string;\n        subTitle: string\n    }\n\n    const [boardTitle, setBoardTitle] = useState<titleType>({\n        title: '',\n        subTitle: ''\n    });\n    const [isUpdate, setIsUpdate] = useState(false);\n    const [searchVal, setSearchVal] = useState({_id: null});\n    let history = useHistory();\n\n    const iframeRef = useRef<HTMLIFrameElement>(null);\n    const optionsRef = useRef<HTMLUListElement>(null);\n\n\n    // 텍스트 에디터 (옵션) 로직\n    const execCmd = (exec: string, value: string, event?:React.MouseEvent<HTMLLIElement, MouseEvent>) =>{\n\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            iframeRef.current.contentDocument.addEventListener('keyup', checkCmdState);\n            iframeRef.current.contentDocument.addEventListener('click', checkCmdState);\n        }\n\n        //현재 상태를 확인해야 하는 부분\n        if(event){\n            event.currentTarget.classList.toggle('on');\n        }\n        \n        \n        // insertHTML, insertImage, styleWithCss\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            if(value === ''){\n                iframeRef.current.contentDocument.execCommand(exec);\n            }else{\n                iframeRef.current.contentDocument.execCommand(exec, true, value);\n            }\n        }\n\n        // 로직이 끝난 후 Textarea로 포커스 하기\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            iframeRef.current.contentDocument.body.focus();\n        }\n    }\n\n\n    // 텍스트 에디터 (옵션 실시간 체크) 로직\n    const checkCmdState = () =>{\n        if(iframeRef.current && iframeRef.current.contentDocument){\n\n            const document = iframeRef.current.contentDocument;\n\n            if(optionsRef.current){\n                optionsRef.current.childNodes.forEach((list: any) => {\n                    if(list.dataset.cmd){\n                        if(document.queryCommandState(list.dataset.cmd)){\n                            list.classList.add('on');\n                        }else{\n                            list.classList.remove('on');\n                        }\n                        // console.log('list', list);\n                    } \n                });\n            }\n        }\n    }\n\n    const fontSizeRef = useRef<HTMLUListElement>(null);\n\n    // 텍스트 에디터 폰트사이즈 윈도우 토글\n    const fontSizeToggle = () =>{\n        if(fontSizeRef.current){\n            fontSizeRef.current.classList.toggle('on');\n        }\n    }\n\n    useEffect(()=>{\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            iframeRef.current.contentDocument.designMode = \"on\"\n            iframeRef.current.contentDocument.body.style.fontFamily = 'NotoSansKR-Regular';\n        }\n\n        const searchVal = urlParams.location.search;\n        const searchData = searchToJson(searchVal);\n        setSearchVal(searchData);\n\n        console.log('searchData', searchData);\n\n        // 수정요청으로 들어올 경우\n        if(searchData._id){\n            setIsUpdate(true);\n            axios({\n                method: 'get',\n                url: '/api/board/list',\n                params: searchData\n            }).then((res) =>{\n                console.log('res', res.data[0]);\n\n                setBoardTitle({\n                    title: res.data[0].title,\n                    subTitle: res.data[0].subTitle\n                });\n                if(iframeRef.current && iframeRef.current.contentDocument){\n                    iframeRef.current.contentDocument.body.innerHTML = res.data[0].description;\n                }\n            });\n        }else{\n            setIsUpdate(false);\n        }\n\n\n        return ()=>{\n            if(iframeRef.current && iframeRef.current.contentDocument){\n                iframeRef.current.contentDocument.removeEventListener('keyup', checkCmdState);\n                iframeRef.current.contentDocument.removeEventListener('click', checkCmdState);\n            }\n        }\n    }, []);\n\n\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) =>{\n        e.preventDefault();\n\n        // 데이터 전송\n        const boardData = {\n            _id: searchVal._id,\n            title: boardTitle.title,\n            subTitle: boardTitle.subTitle,\n            description: iframeRef.current?.contentDocument?.body.innerHTML,\n            writer: 'bkshin2'\n        };\n\n        // 데이터 전송 확인\n        console.log('boardTitle', boardTitle);\n        console.log('boardArticle', iframeRef.current?.contentDocument?.body.innerHTML);\n        \n\n        // 데이터 비우기\n        setBoardTitle({\n            title: '',\n            subTitle: ''\n        });\n        if(iframeRef.current && iframeRef.current.contentDocument){\n            iframeRef.current.contentDocument.body.innerHTML = \"\";\n        }\n\n\n        if(isUpdate){ // 수정일 경우\n            axios({\n                method: 'put',\n                url: '/api/board/list',\n                data: boardData\n            }).then((res) =>{\n                console.log('put_res', res.data[0]);\n                history.push('/board/view?_id=' + searchVal._id);\n            });\n            \n        }else{ // 신규일 경우\n            axios({\n                method: 'post',\n                url: '/api/board/list',\n                data: boardData\n            }).then((res) =>{\n                console.log('post_res', res.data[0]);\n                history.push('/board');\n            });\n            \n        }\n        \n    }\n\n    const onChangeTitle = (e: React.ChangeEvent<HTMLInputElement>) =>{\n        const {name, value} = e.target;\n        setBoardTitle({\n            ...boardTitle,\n            [name]: value\n        })\n    }\n\n    // 텍스트 에디터 만들기 시작\n    // 기능 : 볼드, 폰트사이즈 10~30, 이탤릭, 삭선, 밑줄, 번호, 점, 들여쓰기(2개), 링크, 이미지 삽입, 파일 첨부\n\n    return (\n        <main className=\"bb-board-write__main\">\n            <form className=\"bb-board-write__form\" onSubmit={onSubmit}>\n                <input className=\"bb-board-write__title\" placeholder=\"제목을 입력해주세요.\" type=\"text\" name=\"title\" value={boardTitle?.title} onChange={onChangeTitle}/>\n                <input className=\"bb-board-write__title--sub\" placeholder=\"소제목을 입력해주세요.\" type=\"text\" name=\"subTitle\" value={boardTitle?.subTitle} onChange={onChangeTitle}/>\n  \n\n                <div className=\"bb-board-write__editor-wrapper\">\n                    <ul className=\"bb-board-write__editor-options\" ref={optionsRef}>\n                        <li data-cmd=\"bold\" onClick={(e) => execCmd('bold', '', e)}><BsTypeBold /></li>\n                        <li data-cmd=\"italic\" onClick={(e) => execCmd('italic', '', e)}><BsTypeItalic /></li>\n                        <li data-cmd=\"underline\" onClick={(e) => execCmd('underline', '', e)}><BsTypeUnderline /></li>\n                        <li data-cmd=\"strikethrough\" onClick={(e) => execCmd('strikethrough', '', e)}><BsTypeStrikethrough /></li>\n                        <li data-cmd=\"justifycenter\" onClick={(e) => execCmd('justifycenter', '', e)}><BsTextCenter /></li>\n                        <li onClick={(e) => execCmd('insertunorderedlist', '')}><BsListUl /></li>\n                        <li onClick={(e) => execCmd('insertorderedlist', '')}><BsListOl /></li>\n                        <li onClick={(e) => execCmd('indent', '')}><BsTextIndentLeft /></li>\n                        <li onClick={(e) => execCmd('outdent', '')}><BsTextIndentRight /></li>\n                        <li onClick={fontSizeToggle}>\n                            <VscTextSize />\n                            <ul className=\"bb-board-write__editor-font-box\" ref={fontSizeRef}>\n                                <li onClick={(e) => execCmd('fontSize', '1')}>10px</li>\n                                <li onClick={(e) => execCmd('fontSize', '2')}>13px</li>\n                                <li onClick={(e) => execCmd('fontSize', '3')}>16px</li>\n                                <li onClick={(e) => execCmd('fontSize', '4')}>18px</li>\n                                <li onClick={(e) => execCmd('fontSize', '5')}>24px</li>\n                                <li onClick={(e) => execCmd('fontSize', '6')}>32px</li>\n                                <li onClick={(e) => execCmd('fontSize', '7')}>48px</li>\n                            </ul>\n                        </li>\n                    </ul>\n                    <iframe className=\"bb-board-wrtie__editor\" name=\"boadeditrot\" ref={iframeRef}></iframe>\n                </div>\n                \n\n\n\n                <div className=\"bb-board-write__buttons\">\n                    <button>취소</button>\n                    <button>완료</button>\n                </div>\n            </form>\n        </main>\n    )\n}\n\nexport default BoardWrite;","import React from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport {\n  Header,\n  Footer,\n  Modal,\n  BoardHome,\n  BoardView,\n  BoardWrite\n} from './components';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"bb-body\">\n      <BrowserRouter>\n        <Header />\n        <Modal />\n        <Route exact path=\"/\" component={BoardHome} />\n        <Switch>\n          <Route path=\"/board/write\" component={BoardWrite} />\n          <Route path=\"/board/view\" component={BoardView} />\n          <Route path=\"/board\" component={BoardHome} />\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from 'redux';\nimport modal from './modal';\n\nconst rootReducer = combineReducers({\n    modal\n});\n\nexport default rootReducer;\nexport type RootState = ReturnType<typeof rootReducer>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './modules';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}